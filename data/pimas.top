#Learning Rate (traditionally betweek 0.01 -> 1.0
0.001
# Network Loss Function:
## Options:
### Regression Problem - Mean Squared Error (MSE): 
#### Predicting a real value quantity - One output node with linear activation unit
### Binary Classification Problem - Cross Entropy/Logarithmic Loss (CE):
#### Likelihood of example belong to one of two classes, one output node with sigmoid. One class is 1, other is 0
### Multi-Class Classification Problem - Cross Entropy/Logarithmic Loss (CE):
#### Predicting likelihood of example belonging to each class, One node for each class with Softmax activation function
CE

##--------------- How many Layers in network ---------------
# Layer_Count:
4


##--------------- How many Nodes per layer -----------------
# Nodes_Per_Layer:
[8,500,100,2]


##--------------- Which activation function for layer ------
#Layer_Actv_Funcs:
[Null,Sigmoid,Relu,Softmax]


##--------------- Set initial weight matricies for layer ---
##----- Assign random initial weights
#Random_Weights (0 - false, 1 - true, 2 - all ones):
1
#Random_Range_Min:
0
#Random_Range_Max:
1

##----- Manually assign initial weights
[